spring.application.name=mdexo-backend

# DATABASE
spring.datasource.url=${DB_URL}  # Use environment variable for database URL
spring.datasource.username=${DB_USERNAME}  # Use environment variable for DB username
spring.datasource.password=${DB_PASSWORD}  # Use environment variable for DB password
spring.datasource.driver-class-name=org.postgresql.Driver

spring.datasource.tomcat.max-wait=5000
spring.datasource.tomcat.max-active=50
spring.datasource.tomcat.min-idle=10

# Disable DDL auto-update in production (it could modify your schema in an unexpected way)
spring.jpa.hibernate.ddl-auto=update  
# Disable SQL logging in production (you can keep it true for development)
spring.jpa.show-sql=false

# Hikari Connection Pool Configuration
spring.datasource.hikari.pool-name=HikariPool
spring.datasource.hikari.maximum-pool-size=10
spring.datasource.hikari.minimum-idle=5
spring.datasource.hikari.idle-timeout=30000
spring.datasource.hikari.max-lifetime=600000

# Hibernate and logging
# You might want to lower the logging level for production
logging.level.org.springframework.security=DEBUG

# EMAIL Configuration (Use environment variables for sensitive data)
spring.mail.host=${MAIL_HOST}  # Use environment variable for email SMTP host
spring.mail.port=${MAIL_PORT}  # Use environment variable for email SMTP port
spring.mail.username=${MAIL_USERNAME}  # Use environment variable for email username
spring.mail.password=${MAIL_PASSWORD}  # Use environment variable for email password

spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true

# Thymeleaf Configuration
spring.thymeleaf.prefix=classpath:/templates/
spring.thymeleaf.suffix=.html
spring.thymeleaf.mode=HTML
# Enable cache in production for better performance
spring.thymeleaf.cache=true

# Static resources
spring.web.resources.static-locations=classpath:/static/

# Server Configuration
# Ensure the port is correctly set (8080 is common for production)
server.port=8080

spring.profiles.active=dev
