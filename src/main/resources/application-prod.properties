spring.application.name=mdexo-backend

# JWT configuration
jwt.secret=${JWT_SECRET}
jwt.expiration=86400000

# Liquibase configuration
spring.liquibase.enabled=false
spring.liquibase.url=${DB_URL}
spring.liquibase.user=${DB_USERNAME}
spring.liquibase.password=${DB_PASSWORD}
spring.liquibase.change-log=classpath:/db/changelog/db.changelog-master.xml

# DATABASE
spring.datasource.url=${DB_URL} 
# Use environment variable for DB username
spring.datasource.username=${DB_USERNAME}  
# Use environment variable for DB password
spring.datasource.password=${DB_PASSWORD}  
spring.datasource.driver-class-name=org.postgresql.Driver
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

spring.datasource.tomcat.max-wait=5000
spring.datasource.tomcat.max-active=50
spring.datasource.tomcat.min-idle=10

# Spring JPA
# Prevent schema generation in production
spring.jpa.hibernate.ddl-auto=validate
spring.jpa.properties.hibernate.hbm2ddl.auto=validate 
spring.jpa.show-sql=false

spring.datasource.hikari.pool-name=HikariPool
spring.datasource.hikari.maximum-pool-size=5
spring.datasource.hikari.minimum-idle=5
spring.datasource.hikari.idle-timeout=30000
spring.datasource.hikari.max-lifetime=600000

# Hibernate logging (optional, for debugging)
# logging.level.org.hibernate=DEBUG
# logging.level.org.springframework.security=INFO

# temporary DEBUG settings, to resolve database issue
# logging.level.org.springframework.jdbc.core=DEBUG
# logging.level.org.springframework.beans.factory=DEBUG
# logging.level.org.springframework.orm.jpa=DEBUG

# EMAIL
spring.mail.host=${MAIL_HOST}
spring.mail.port=${MAIL_PORT}
spring.mail.username=${MAIL_USERNAME} 
spring.mail.password=${MAIL_PASSWORD}  

spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true

# Thymeleaf configuration
spring.thymeleaf.prefix=classpath:/templates/
spring.thymeleaf.suffix=.html
spring.thymeleaf.mode=HTML

# Enable cache in production for better performance
spring.thymeleaf.cache=true

# Static resource locations
spring.web.resources.static-locations=classpath:/static/

# Server Configuration (Ensure the port is set)
server.port=8080

# AWS S3 configuration
aws.access.key.id=${AWS_ACCESS_KEY_ID}
aws.secret.access.key=${AWS_SECRET_ACCESS_KEY}
aws.s3.bucket=${AWS_BUCKET_NAME}
aws.region=${AWS_REGION}

app.mock.enabled=false

#S3 upload config
spring.servlet.multipart.max-file-size=${SPRING_SERVLET_MULTIPART_MAX_FILE_SIZE}
spring.servlet.multipart.max-request-size=${SPRING_SERVLET_MULTIPART_MAX_REQUEST_SIZE}
server.tomcat.max-swallow-size=${SERVER_TOMCAT_MAX_SWALLOW_SIZE}

app.upload.max-size=${MAX_UPLOAD_SIZE}
app.upload.allowed-mime-types=${ALLOWED_MIME_TYPES}
app.upload.allowed-extensions=${ALLOWED_EXTENSIONS}